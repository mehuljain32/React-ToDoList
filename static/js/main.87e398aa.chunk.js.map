{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAAe,I,2BCiCAA,MA5Bf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAY,OAAjB,SACH,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAC1BC,SAAW,SAACC,GACRZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAE7C,+BACI,cAAC,IAAD,CAAiBH,UAAW,UAAUU,KAAK,QAC3CC,QAAU,kBAAMhB,EAAMiB,WAAWb,EAAKI,cATVJ,EAAKI,QAgB7C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAY,IAAKC,OAAO,cAAlC,SACClB,O,eCpBbmB,IAAQC,IAAIC,K,IAgFGC,E,kDA9Eb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAQ,CACXtB,MAAO,GACPuB,SAAU,CACRf,KAAM,GACNF,IAAK,KAGT,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAW,EAAKA,UAAUc,KAAf,gBAZA,E,wDAeNf,GACViB,KAAKC,SAAS,CACZL,SAAS,CACPf,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,W,8BAKRpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,SAE3B,GADAU,QAAQC,IAAIF,GACQ,KAAjBA,EAAQxB,KAAY,CACrB,IAAMR,EAAK,sBAAO2B,KAAKL,MAAMtB,OAAlB,CAAyBgC,IACtCL,KAAKC,SAAS,CACZ5B,MAAOA,EACPuB,SAAU,CACRf,KAAK,GACLF,IAAI,S,iCAMCA,GACT,IAAM6B,EAAgBR,KAAKL,MAAMtB,MAAMoC,QAAO,SAAAlC,GAAI,OAAGA,EAAKI,MAAQA,KAClEqB,KAAKC,SAAS,CACZ5B,MAAOmC,M,gCAID3B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAQA,IACdJ,EAAKM,KAAOA,MAGhBmB,KAAKC,SAAS,CACZ5B,MAAQA,M,+BAIV,OACE,sBAAKG,UAAU,MAAf,UACE,iCACA,uBAAME,GAAK,aAAagC,SAAUV,KAAKD,QAAvC,UACE,uBAAOtB,KAAK,OAAOkC,YAAa,aAChC/B,MAAOoB,KAAKL,MAAMC,SAASf,KAAMC,SAAYkB,KAAKH,cAElD,wBAAQpB,KAAK,SAAb,sBAGF,cAAC,EAAD,CAAWJ,MAAS2B,KAAKL,MAAMtB,MAC/Be,WAAYY,KAAKZ,WACjBJ,UAAagB,KAAKhB,mB,GAxER4B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87e398aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport '../src/ListItems.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport FlipMove from 'react-flip-move';\n\nfunction ListItems(props){\n    const items = props.items;\n    const listItems = items.map(item => {\n        return <div className = \"list\" key={item.key}>\n            <p>\n                <input type=\"text\" \n                id={item.key} value={item.text}\n                onChange= {(e) => {\n                    props.setUpdate(e.target.value, item.key)\n                }} />\n            <span>\n                <FontAwesomeIcon className= \"faicons\" icon='trash'\n                onClick= {() => props.deleteItem(item.key)} />\n            </span>\n            </p>\n            \n        </div>\n    })\n\n    return(\n        <div>\n            <FlipMove duration = {200} easing=\"ease-in-out\">\n            {listItems}\n            </FlipMove>\n            </div>\n    )\n}\n\nexport default ListItems;","import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport ListItems from './ListItems';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      currItem: {\n        text: '',\n        key: ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate= this.setUpdate.bind(this);\n\n  }\n  handleInput(e){\n    this.setState({\n      currItem:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currItem;\n    console.log(newItem);\n    if(newItem.text !== \"\"){\n      const items = [...this.state.items, newItem]\n    this.setState({\n      items: items,\n      currItem: {\n        text:'',\n        key:''\n      }\n    })\n    }\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item=> item.key !== key);\n    this.setState({\n      items: filteredItems\n    })\n  }\n\n  setUpdate(text, key){\n    const items = this.state.items;\n    items.map(item => {\n      if(item.key === key){\n        item.text = text;\n      }\n    })\n    this.setState({\n      items : items\n    })\n  }\n  render(){\n    return(\n      <div className=\"App\">\n        <header>\n        <form id = \"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder= \"Enter Text\" \n          value={this.state.currItem.text} onChange = {this.handleInput}\n          ></input>\n          <button type=\"submit\">Add</button>\n        </form>\n        </header>\n        <ListItems items = {this.state.items}\n        deleteItem={this.deleteItem}\n        setUpdate = {this.setUpdate}></ListItems>\n      </div>  \n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}